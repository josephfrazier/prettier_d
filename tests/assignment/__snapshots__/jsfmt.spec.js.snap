// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`binaryish.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const computedDescriptionLines = (showConfirm &&
  descriptionLinesConfirming) ||
  (focused && !loading && descriptionLinesFocused) ||
  descriptionLines;

computedDescriptionLines = (focused &&
  !loading &&
  descriptionLinesFocused) ||
  descriptionLines;

=====================================output=====================================
const computedDescriptionLines =
  (showConfirm && descriptionLinesConfirming) ||
  (focused && !loading && descriptionLinesFocused) ||
  descriptionLines;

computedDescriptionLines =
  (focused && !loading && descriptionLinesFocused) || descriptionLines;

================================================================================
`;

exports[`destructuring.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
let {
  bottom: offsetBottom,
  left: offsetLeft,
  right: offsetRight,
  top: offsetTop,
} = getPressRectOffset == null ? DEFAULT_PRESS_RECT : getPressRectOffset();

const { accessibilityModule: FooAccessibilityModule, accessibilityModule: FooAccessibilityModule2, accessibilityModule: FooAccessibilityModule3, accessibilityModule: FooAccessibilityModule4,
      } = foo || {};

({ prop: toAssign = "default" } = { prop: "propval" });

=====================================output=====================================
let {
  bottom: offsetBottom,
  left: offsetLeft,
  right: offsetRight,
  top: offsetTop
} = getPressRectOffset == null ? DEFAULT_PRESS_RECT : getPressRectOffset();

const {
  accessibilityModule: FooAccessibilityModule,
  accessibilityModule: FooAccessibilityModule2,
  accessibilityModule: FooAccessibilityModule3,
  accessibilityModule: FooAccessibilityModule4
} = foo || {};

({ prop: toAssign = "default" } = { prop: "propval" });

================================================================================
`;

exports[`sequence.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
for ((i = 0), (len = arr.length); i < len; i++) {
  console.log(arr[i])
}

for (i = 0, len = arr.length; i < len; i++) {
  console.log(arr[i])
}

=====================================output=====================================
for (i = 0, len = arr.length; i < len; i++) {
  console.log(arr[i]);
}

for (i = 0, len = arr.length; i < len; i++) {
  console.log(arr[i]);
}

================================================================================
`;
