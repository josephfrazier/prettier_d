// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`arrow.js 1`] = `
====================================options=====================================
parsers: ["babel", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
function *f() {
  (yield a => a);
  (yield async a => a);
  (yield async (a) => a);
}

=====================================output=====================================
function* f() {
  yield a => a;
  yield async a => a;
  yield async a => a;
}

================================================================================
`;

exports[`conditional.js 1`] = `
====================================options=====================================
parsers: ["babel", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
function* f() {
  a = (yield) ? 1 : 1;
  a = yield 1 ? 1 : 1;
  a = (yield 1) ? 1 : 1;
  a = 1 ? yield : yield;
  a = 1 ? yield 1 : yield 1;
}

function* f() {
  a = yield* 1 ? 1 : 1;
  a = (yield* 1) ? 1 : 1;
  a = 1 ? yield* 1 : yield* 1;
}

async function f() {
  a = await 1 ? 1 : 1;
  a = (await 1) ? 1 : 1;
  a = 1 ? await 1 : await 1;
}

=====================================output=====================================
function* f() {
  a = (yield) ? 1 : 1;
  a = yield 1 ? 1 : 1;
  a = (yield 1) ? 1 : 1;
  a = 1 ? yield : yield;
  a = 1 ? yield 1 : yield 1;
}

function* f() {
  a = yield* 1 ? 1 : 1;
  a = (yield* 1) ? 1 : 1;
  a = 1 ? yield* 1 : yield* 1;
}

async function f() {
  a = (await 1) ? 1 : 1;
  a = (await 1) ? 1 : 1;
  a = 1 ? await 1 : await 1;
}

================================================================================
`;
