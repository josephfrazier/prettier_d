// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`comment.js format 1`] = `
====================================options=====================================
parsers: ["flow", "babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
type Foo = {
  method(
    arg: number, // I belong with baz
    qux: string
  ) : void
}

=====================================output=====================================
type Foo = {
  method(
    arg: number, // I belong with baz
    qux: string
  ): void,
};

================================================================================
`;

exports[`method.js format 1`] = `
====================================options=====================================
parsers: ["flow", "babel"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
type T = { method: () => void };
type T2 = { method(): void };
declare class X { method(): void }
declare function f(): void;
var f: () => void;

declare class X {
  static deserialize(): mixed,
  static deserialize: () => mixed,
}

interface I {
  static(): number;
}

=====================================output=====================================
type T = { method: () => void };
type T2 = { method(): void };
declare class X {
  method(): void;
}
declare function f(): void;
var f: () => void;

declare class X {
  static deserialize(): mixed;
  static deserialize: () => mixed;
}

interface I {
  static(): number;
}

================================================================================
`;
