// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`binary.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const funnelSnapshotCard = (report === MY_OVERVIEW &&
  !ReportGK.xar_metrics_active_capitol_v2) ||
  (report === COMPANY_OVERVIEW &&
    !ReportGK.xar_metrics_active_capitol_v2_company_metrics)
  ? <ReportMetricsFunnelSnapshotCard metrics={metrics} />
  : null;

room = room.map((row, rowIndex) => (
  row.map((col, colIndex) => (
    (rowIndex === 0 || colIndex === 0 || rowIndex === height || colIndex === width) ? 1 : 0
  ))
))

=====================================output=====================================
const funnelSnapshotCard =
  (report === MY_OVERVIEW && !ReportGK.xar_metrics_active_capitol_v2) ||
  (report === COMPANY_OVERVIEW &&
    !ReportGK.xar_metrics_active_capitol_v2_company_metrics) ? (
    <ReportMetricsFunnelSnapshotCard metrics={metrics} />
  ) : null;

room = room.map((row, rowIndex) =>
  row.map((col, colIndex) =>
    rowIndex === 0 ||
    colIndex === 0 ||
    rowIndex === height ||
    colIndex === width
      ? 1
      : 0
  )
);

================================================================================
`;

exports[`binary.js 2`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
                                                                                | printWidth
=====================================input======================================
const funnelSnapshotCard = (report === MY_OVERVIEW &&
  !ReportGK.xar_metrics_active_capitol_v2) ||
  (report === COMPANY_OVERVIEW &&
    !ReportGK.xar_metrics_active_capitol_v2_company_metrics)
  ? <ReportMetricsFunnelSnapshotCard metrics={metrics} />
  : null;

room = room.map((row, rowIndex) => (
  row.map((col, colIndex) => (
    (rowIndex === 0 || colIndex === 0 || rowIndex === height || colIndex === width) ? 1 : 0
  ))
))

=====================================output=====================================
const funnelSnapshotCard =
    (report === MY_OVERVIEW && !ReportGK.xar_metrics_active_capitol_v2) ||
    (report === COMPANY_OVERVIEW &&
        !ReportGK.xar_metrics_active_capitol_v2_company_metrics) ? (
        <ReportMetricsFunnelSnapshotCard metrics={metrics} />
    ) : null;

room = room.map((row, rowIndex) =>
    row.map((col, colIndex) =>
        rowIndex === 0 ||
        colIndex === 0 ||
        rowIndex === height ||
        colIndex === width
            ? 1
            : 0
    )
);

================================================================================
`;

exports[`binary.js 3`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
useTabs: true
                                                                                | printWidth
=====================================input======================================
const funnelSnapshotCard = (report === MY_OVERVIEW &&
  !ReportGK.xar_metrics_active_capitol_v2) ||
  (report === COMPANY_OVERVIEW &&
    !ReportGK.xar_metrics_active_capitol_v2_company_metrics)
  ? <ReportMetricsFunnelSnapshotCard metrics={metrics} />
  : null;

room = room.map((row, rowIndex) => (
  row.map((col, colIndex) => (
    (rowIndex === 0 || colIndex === 0 || rowIndex === height || colIndex === width) ? 1 : 0
  ))
))

=====================================output=====================================
const funnelSnapshotCard =
	(report === MY_OVERVIEW && !ReportGK.xar_metrics_active_capitol_v2) ||
	(report === COMPANY_OVERVIEW &&
		!ReportGK.xar_metrics_active_capitol_v2_company_metrics) ? (
		<ReportMetricsFunnelSnapshotCard metrics={metrics} />
	) : null;

room = room.map((row, rowIndex) =>
	row.map((col, colIndex) =>
		rowIndex === 0 ||
		colIndex === 0 ||
		rowIndex === height ||
		colIndex === width
			? 1
			: 0
	)
);

================================================================================
`;

exports[`binary.js 4`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
useTabs: true
                                                                                | printWidth
=====================================input======================================
const funnelSnapshotCard = (report === MY_OVERVIEW &&
  !ReportGK.xar_metrics_active_capitol_v2) ||
  (report === COMPANY_OVERVIEW &&
    !ReportGK.xar_metrics_active_capitol_v2_company_metrics)
  ? <ReportMetricsFunnelSnapshotCard metrics={metrics} />
  : null;

room = room.map((row, rowIndex) => (
  row.map((col, colIndex) => (
    (rowIndex === 0 || colIndex === 0 || rowIndex === height || colIndex === width) ? 1 : 0
  ))
))

=====================================output=====================================
const funnelSnapshotCard =
	(report === MY_OVERVIEW && !ReportGK.xar_metrics_active_capitol_v2) ||
	(report === COMPANY_OVERVIEW &&
		!ReportGK.xar_metrics_active_capitol_v2_company_metrics) ? (
		<ReportMetricsFunnelSnapshotCard metrics={metrics} />
	) : null;

room = room.map((row, rowIndex) =>
	row.map((col, colIndex) =>
		rowIndex === 0 ||
		colIndex === 0 ||
		rowIndex === height ||
		colIndex === width
			? 1
			: 0
	)
);

================================================================================
`;

exports[`func-call.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
fn(
  bifornCringerMoshedPerplexSawder,
  askTrovenaBeenaDependsRowans,
  glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&
    anodyneCondosMalateOverateRetinol 
      ? annularCooeedSplicesWalksWayWay 
      : kochabCooieGameOnOboleUnweave 
);

=====================================output=====================================
fn(
  bifornCringerMoshedPerplexSawder,
  askTrovenaBeenaDependsRowans,
  glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&
    anodyneCondosMalateOverateRetinol
    ? annularCooeedSplicesWalksWayWay
    : kochabCooieGameOnOboleUnweave
);

================================================================================
`;

exports[`func-call.js 2`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
                                                                                | printWidth
=====================================input======================================
fn(
  bifornCringerMoshedPerplexSawder,
  askTrovenaBeenaDependsRowans,
  glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&
    anodyneCondosMalateOverateRetinol 
      ? annularCooeedSplicesWalksWayWay 
      : kochabCooieGameOnOboleUnweave 
);

=====================================output=====================================
fn(
    bifornCringerMoshedPerplexSawder,
    askTrovenaBeenaDependsRowans,
    glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&
        anodyneCondosMalateOverateRetinol
        ? annularCooeedSplicesWalksWayWay
        : kochabCooieGameOnOboleUnweave
);

================================================================================
`;

exports[`func-call.js 3`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
useTabs: true
                                                                                | printWidth
=====================================input======================================
fn(
  bifornCringerMoshedPerplexSawder,
  askTrovenaBeenaDependsRowans,
  glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&
    anodyneCondosMalateOverateRetinol 
      ? annularCooeedSplicesWalksWayWay 
      : kochabCooieGameOnOboleUnweave 
);

=====================================output=====================================
fn(
	bifornCringerMoshedPerplexSawder,
	askTrovenaBeenaDependsRowans,
	glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&
		anodyneCondosMalateOverateRetinol
		? annularCooeedSplicesWalksWayWay
		: kochabCooieGameOnOboleUnweave
);

================================================================================
`;

exports[`func-call.js 4`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
useTabs: true
                                                                                | printWidth
=====================================input======================================
fn(
  bifornCringerMoshedPerplexSawder,
  askTrovenaBeenaDependsRowans,
  glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&
    anodyneCondosMalateOverateRetinol 
      ? annularCooeedSplicesWalksWayWay 
      : kochabCooieGameOnOboleUnweave 
);

=====================================output=====================================
fn(
	bifornCringerMoshedPerplexSawder,
	askTrovenaBeenaDependsRowans,
	glimseGlyphsHazardNoopsTieTie === averredBathersBoxroomBuggyNurl &&
		anodyneCondosMalateOverateRetinol
		? annularCooeedSplicesWalksWayWay
		: kochabCooieGameOnOboleUnweave
);

================================================================================
`;

exports[`indent.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
aaaaaaaaaaaaaaa ? bbbbbbbbbbbbbbbbbb : ccccccccccccccc ? ddddddddddddddd : eeeeeeeeeeeeeee ? fffffffffffffff : gggggggggggggggg

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

a
    ? {
        a: 0
      }
    : {
        a: {
             a: 0
           }
            ? {
                a: 0
              }
            : {
                y: {
                    a: 0
                }
                    ? {
                        a: 0
                    }
                    : {
                        a: 0
                    }
            }
      }

a
	? {
			a: function() {
				return a
					? {
							a: [
								a
									? {
											a: 0,
											b: [
												a
													? [
															0,
															1
													  ]
													: []
											]
									  }
									: [
											[
												0,
												{
													a: 0
												},
												a
													? 0
													: 1
											],
											function() {
												return a
													? {
															a: 0
													  }
													: [
															{
																a: 0
															},
															{}
													  ];
											}
									  ]
							]
					  }
					: [
							a
								? function() {
										a
											? a(
													a
														? {
																a: a(
																	{
																		a: 0
																	}
																)
														  }
														: [
																0,
																a(),
																a(
																	a(),
																	{
																		a: 0
																	},
																	a
																		? a()
																		: a(
																				{
																					a: 0
																				}
																		  )
																),
																a()
																	? {
																			a: a(),
																			b: []
																	  }
																	: {}
														  ]
											  ):
										a(
											a()
												? {
														a: 0
												  }
												: (function(a) {
														return a()
															? [
																	{
																		a: 0,
																		b: a()
																	}
															  ]
															: a(
																	[
																		a
																			? {
																					a: 0
																			  }
																			: {},
																		{
																			a: 0
																		}
																	]
															  );
												  })(
														a
															? function(a) {
																	return function() {
																		return 0;
																	};
															  }
															: function(a) {
																	return function() {
																		return 1;
																	}
															  }
												  )
										);
								  }
								: function() {

								  }
					  ];
			}
	  }
    : a;

=====================================output=====================================
aaaaaaaaaaaaaaa
  ? bbbbbbbbbbbbbbbbbb
  : ccccccccccccccc
  ? ddddddddddddddd
  : eeeeeeeeeeeeeee
  ? fffffffffffffff
  : gggggggggggggggg;

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
      ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
      : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;

a
  ? {
      a: 0
    }
  : {
      a: {
        a: 0
      }
        ? {
            a: 0
          }
        : {
            y: {
              a: 0
            }
              ? {
                  a: 0
                }
              : {
                  a: 0
                }
          }
    };

a
  ? {
      a: function() {
        return a
          ? {
              a: [
                a
                  ? {
                      a: 0,
                      b: [a ? [0, 1] : []]
                    }
                  : [
                      [
                        0,
                        {
                          a: 0
                        },
                        a ? 0 : 1
                      ],
                      function() {
                        return a
                          ? {
                              a: 0
                            }
                          : [
                              {
                                a: 0
                              },
                              {}
                            ];
                      }
                    ]
              ]
            }
          : [
              a
                ? function() {
                    a
                      ? a(
                          a
                            ? {
                                a: a({
                                  a: 0
                                })
                              }
                            : [
                                0,
                                a(),
                                a(
                                  a(),
                                  {
                                    a: 0
                                  },
                                  a
                                    ? a()
                                    : a({
                                        a: 0
                                      })
                                ),
                                a()
                                  ? {
                                      a: a(),
                                      b: []
                                    }
                                  : {}
                              ]
                        )
                      : a(
                          a()
                            ? {
                                a: 0
                              }
                            : (function(a) {
                                return a()
                                  ? [
                                      {
                                        a: 0,
                                        b: a()
                                      }
                                    ]
                                  : a([
                                      a
                                        ? {
                                            a: 0
                                          }
                                        : {},
                                      {
                                        a: 0
                                      }
                                    ]);
                              })(
                                a
                                  ? function(a) {
                                      return function() {
                                        return 0;
                                      };
                                    }
                                  : function(a) {
                                      return function() {
                                        return 1;
                                      };
                                    }
                              )
                        );
                  }
                : function() {}
            ];
      }
    }
  : a;

================================================================================
`;

exports[`indent.js 2`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
                                                                                | printWidth
=====================================input======================================
aaaaaaaaaaaaaaa ? bbbbbbbbbbbbbbbbbb : ccccccccccccccc ? ddddddddddddddd : eeeeeeeeeeeeeee ? fffffffffffffff : gggggggggggggggg

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

a
    ? {
        a: 0
      }
    : {
        a: {
             a: 0
           }
            ? {
                a: 0
              }
            : {
                y: {
                    a: 0
                }
                    ? {
                        a: 0
                    }
                    : {
                        a: 0
                    }
            }
      }

a
	? {
			a: function() {
				return a
					? {
							a: [
								a
									? {
											a: 0,
											b: [
												a
													? [
															0,
															1
													  ]
													: []
											]
									  }
									: [
											[
												0,
												{
													a: 0
												},
												a
													? 0
													: 1
											],
											function() {
												return a
													? {
															a: 0
													  }
													: [
															{
																a: 0
															},
															{}
													  ];
											}
									  ]
							]
					  }
					: [
							a
								? function() {
										a
											? a(
													a
														? {
																a: a(
																	{
																		a: 0
																	}
																)
														  }
														: [
																0,
																a(),
																a(
																	a(),
																	{
																		a: 0
																	},
																	a
																		? a()
																		: a(
																				{
																					a: 0
																				}
																		  )
																),
																a()
																	? {
																			a: a(),
																			b: []
																	  }
																	: {}
														  ]
											  ):
										a(
											a()
												? {
														a: 0
												  }
												: (function(a) {
														return a()
															? [
																	{
																		a: 0,
																		b: a()
																	}
															  ]
															: a(
																	[
																		a
																			? {
																					a: 0
																			  }
																			: {},
																		{
																			a: 0
																		}
																	]
															  );
												  })(
														a
															? function(a) {
																	return function() {
																		return 0;
																	};
															  }
															: function(a) {
																	return function() {
																		return 1;
																	}
															  }
												  )
										);
								  }
								: function() {

								  }
					  ];
			}
	  }
    : a;

=====================================output=====================================
aaaaaaaaaaaaaaa
    ? bbbbbbbbbbbbbbbbbb
    : ccccccccccccccc
    ? ddddddddddddddd
    : eeeeeeeeeeeeeee
    ? fffffffffffffff
    : gggggggggggggggg;

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            ? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
    : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;

a
    ? {
          a: 0
      }
    : {
          a: {
              a: 0
          }
              ? {
                    a: 0
                }
              : {
                    y: {
                        a: 0
                    }
                        ? {
                              a: 0
                          }
                        : {
                              a: 0
                          }
                }
      };

a
    ? {
          a: function() {
              return a
                  ? {
                        a: [
                            a
                                ? {
                                      a: 0,
                                      b: [a ? [0, 1] : []]
                                  }
                                : [
                                      [
                                          0,
                                          {
                                              a: 0
                                          },
                                          a ? 0 : 1
                                      ],
                                      function() {
                                          return a
                                              ? {
                                                    a: 0
                                                }
                                              : [
                                                    {
                                                        a: 0
                                                    },
                                                    {}
                                                ];
                                      }
                                  ]
                        ]
                    }
                  : [
                        a
                            ? function() {
                                  a
                                      ? a(
                                            a
                                                ? {
                                                      a: a({
                                                          a: 0
                                                      })
                                                  }
                                                : [
                                                      0,
                                                      a(),
                                                      a(
                                                          a(),
                                                          {
                                                              a: 0
                                                          },
                                                          a
                                                              ? a()
                                                              : a({
                                                                    a: 0
                                                                })
                                                      ),
                                                      a()
                                                          ? {
                                                                a: a(),
                                                                b: []
                                                            }
                                                          : {}
                                                  ]
                                        )
                                      : a(
                                            a()
                                                ? {
                                                      a: 0
                                                  }
                                                : (function(a) {
                                                      return a()
                                                          ? [
                                                                {
                                                                    a: 0,
                                                                    b: a()
                                                                }
                                                            ]
                                                          : a([
                                                                a
                                                                    ? {
                                                                          a: 0
                                                                      }
                                                                    : {},
                                                                {
                                                                    a: 0
                                                                }
                                                            ]);
                                                  })(
                                                      a
                                                          ? function(a) {
                                                                return function() {
                                                                    return 0;
                                                                };
                                                            }
                                                          : function(a) {
                                                                return function() {
                                                                    return 1;
                                                                };
                                                            }
                                                  )
                                        );
                              }
                            : function() {}
                    ];
          }
      }
    : a;

================================================================================
`;

exports[`indent.js 3`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
useTabs: true
                                                                                | printWidth
=====================================input======================================
aaaaaaaaaaaaaaa ? bbbbbbbbbbbbbbbbbb : ccccccccccccccc ? ddddddddddddddd : eeeeeeeeeeeeeee ? fffffffffffffff : gggggggggggggggg

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

a
    ? {
        a: 0
      }
    : {
        a: {
             a: 0
           }
            ? {
                a: 0
              }
            : {
                y: {
                    a: 0
                }
                    ? {
                        a: 0
                    }
                    : {
                        a: 0
                    }
            }
      }

a
	? {
			a: function() {
				return a
					? {
							a: [
								a
									? {
											a: 0,
											b: [
												a
													? [
															0,
															1
													  ]
													: []
											]
									  }
									: [
											[
												0,
												{
													a: 0
												},
												a
													? 0
													: 1
											],
											function() {
												return a
													? {
															a: 0
													  }
													: [
															{
																a: 0
															},
															{}
													  ];
											}
									  ]
							]
					  }
					: [
							a
								? function() {
										a
											? a(
													a
														? {
																a: a(
																	{
																		a: 0
																	}
																)
														  }
														: [
																0,
																a(),
																a(
																	a(),
																	{
																		a: 0
																	},
																	a
																		? a()
																		: a(
																				{
																					a: 0
																				}
																		  )
																),
																a()
																	? {
																			a: a(),
																			b: []
																	  }
																	: {}
														  ]
											  ):
										a(
											a()
												? {
														a: 0
												  }
												: (function(a) {
														return a()
															? [
																	{
																		a: 0,
																		b: a()
																	}
															  ]
															: a(
																	[
																		a
																			? {
																					a: 0
																			  }
																			: {},
																		{
																			a: 0
																		}
																	]
															  );
												  })(
														a
															? function(a) {
																	return function() {
																		return 0;
																	};
															  }
															: function(a) {
																	return function() {
																		return 1;
																	}
															  }
												  )
										);
								  }
								: function() {

								  }
					  ];
			}
	  }
    : a;

=====================================output=====================================
aaaaaaaaaaaaaaa
	? bbbbbbbbbbbbbbbbbb
	: ccccccccccccccc
	? ddddddddddddddd
	: eeeeeeeeeeeeeee
	? fffffffffffffff
	: gggggggggggggggg;

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
		? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
			? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
			: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
		: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;

a
	? {
			a: 0
	  }
	: {
			a: {
				a: 0
			}
				? {
						a: 0
				  }
				: {
						y: {
							a: 0
						}
							? {
									a: 0
							  }
							: {
									a: 0
							  }
				  }
	  };

a
	? {
			a: function() {
				return a
					? {
							a: [
								a
									? {
											a: 0,
											b: [a ? [0, 1] : []]
									  }
									: [
											[
												0,
												{
													a: 0
												},
												a ? 0 : 1
											],
											function() {
												return a
													? {
															a: 0
													  }
													: [
															{
																a: 0
															},
															{}
													  ];
											}
									  ]
							]
					  }
					: [
							a
								? function() {
										a
											? a(
													a
														? {
																a: a({
																	a: 0
																})
														  }
														: [
																0,
																a(),
																a(
																	a(),
																	{
																		a: 0
																	},
																	a
																		? a()
																		: a({
																				a: 0
																		  })
																),
																a()
																	? {
																			a: a(),
																			b: []
																	  }
																	: {}
														  ]
											  )
											: a(
													a()
														? {
																a: 0
														  }
														: (function(a) {
																return a()
																	? [
																			{
																				a: 0,
																				b: a()
																			}
																	  ]
																	: a([
																			a
																				? {
																						a: 0
																				  }
																				: {},
																			{
																				a: 0
																			}
																	  ]);
														  })(
																a
																	? function(a) {
																			return function() {
																				return 0;
																			};
																	  }
																	: function(a) {
																			return function() {
																				return 1;
																			};
																	  }
														  )
											  );
								  }
								: function() {}
					  ];
			}
	  }
	: a;

================================================================================
`;

exports[`indent.js 4`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
useTabs: true
                                                                                | printWidth
=====================================input======================================
aaaaaaaaaaaaaaa ? bbbbbbbbbbbbbbbbbb : ccccccccccccccc ? ddddddddddddddd : eeeeeeeeeeeeeee ? fffffffffffffff : gggggggggggggggg

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
?
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
:
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

a
    ? {
        a: 0
      }
    : {
        a: {
             a: 0
           }
            ? {
                a: 0
              }
            : {
                y: {
                    a: 0
                }
                    ? {
                        a: 0
                    }
                    : {
                        a: 0
                    }
            }
      }

a
	? {
			a: function() {
				return a
					? {
							a: [
								a
									? {
											a: 0,
											b: [
												a
													? [
															0,
															1
													  ]
													: []
											]
									  }
									: [
											[
												0,
												{
													a: 0
												},
												a
													? 0
													: 1
											],
											function() {
												return a
													? {
															a: 0
													  }
													: [
															{
																a: 0
															},
															{}
													  ];
											}
									  ]
							]
					  }
					: [
							a
								? function() {
										a
											? a(
													a
														? {
																a: a(
																	{
																		a: 0
																	}
																)
														  }
														: [
																0,
																a(),
																a(
																	a(),
																	{
																		a: 0
																	},
																	a
																		? a()
																		: a(
																				{
																					a: 0
																				}
																		  )
																),
																a()
																	? {
																			a: a(),
																			b: []
																	  }
																	: {}
														  ]
											  ):
										a(
											a()
												? {
														a: 0
												  }
												: (function(a) {
														return a()
															? [
																	{
																		a: 0,
																		b: a()
																	}
															  ]
															: a(
																	[
																		a
																			? {
																					a: 0
																			  }
																			: {},
																		{
																			a: 0
																		}
																	]
															  );
												  })(
														a
															? function(a) {
																	return function() {
																		return 0;
																	};
															  }
															: function(a) {
																	return function() {
																		return 1;
																	}
															  }
												  )
										);
								  }
								: function() {

								  }
					  ];
			}
	  }
    : a;

=====================================output=====================================
aaaaaaaaaaaaaaa
	? bbbbbbbbbbbbbbbbbb
	: ccccccccccccccc
	? ddddddddddddddd
	: eeeeeeeeeeeeeee
	? fffffffffffffff
	: gggggggggggggggg;

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
		? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
			? aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
			: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
		: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
	: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;

a
	? {
			a: 0
	  }
	: {
			a: {
				a: 0
			}
				? {
						a: 0
				  }
				: {
						y: {
							a: 0
						}
							? {
									a: 0
							  }
							: {
									a: 0
							  }
				  }
	  };

a
	? {
			a: function() {
				return a
					? {
							a: [
								a
									? {
											a: 0,
											b: [a ? [0, 1] : []]
									  }
									: [
											[
												0,
												{
													a: 0
												},
												a ? 0 : 1
											],
											function() {
												return a
													? {
															a: 0
													  }
													: [
															{
																a: 0
															},
															{}
													  ];
											}
									  ]
							]
					  }
					: [
							a
								? function() {
										a
											? a(
													a
														? {
																a: a({
																	a: 0
																})
														  }
														: [
																0,
																a(),
																a(
																	a(),
																	{
																		a: 0
																	},
																	a
																		? a()
																		: a({
																				a: 0
																		  })
																),
																a()
																	? {
																			a: a(),
																			b: []
																	  }
																	: {}
														  ]
											  )
											: a(
													a()
														? {
																a: 0
														  }
														: (function(a) {
																return a()
																	? [
																			{
																				a: 0,
																				b: a()
																			}
																	  ]
																	: a([
																			a
																				? {
																						a: 0
																				  }
																				: {},
																			{
																				a: 0
																			}
																	  ]);
														  })(
																a
																	? function(
																			a
																	  ) {
																			return function() {
																				return 0;
																			};
																	  }
																	: function(
																			a
																	  ) {
																			return function() {
																				return 1;
																			};
																	  }
														  )
											  );
								  }
								: function() {}
					  ];
			}
	  }
	: a;

================================================================================
`;

exports[`nested.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
let icecream = what == "cone"
  ? p => !!p ? \`here's your \${p} cone\` : \`just the empty cone for you\`
  : p => \`here's your \${p} \${what}\`;

const value = condition1
? value1
: condition2
    ? value2
    : condition3
        ? value3
        : value4;


const StorybookLoader = ({ match }) => (
  match.params.storyId === "button"
    ? <ButtonStorybook />
    : match.params.storyId === "color"
    ? <ColorBook />
    : match.params.storyId === "typography"
    ? <TypographyBook />
    : match.params.storyId === "loading"
    ? <LoaderStorybook />
    : match.params.storyId === "deal-list"
    ? <DealListStory />
    : (
      <Message>
        <Title>{'Missing story book'}</Title>
        <Content>
          <BackButton/>
        </Content>
      </Message>
    )
)

const message =
    i % 3 === 0 && i % 5 === 0 ?
        'fizzbuzz'
    : i % 3 === 0 ?
        'fizz'
    : i % 5 === 0 ?
        'buzz'
    :
        String(i)

const paymentMessage = state == 'success'
  ? 'Payment completed successfully'

: state == 'processing'
  ? 'Payment processing'

: state == 'invalid_cvc'
  ? 'There was an issue with your CVC number'

: state == 'invalid_expiry'
  ? 'Expiry must be sometime in the past.'

  : 'There was an issue with the payment.  Please contact support.'

const paymentMessage = state == 'success'
  ? 1 //'Payment completed successfully'

: state == 'processing'
  ? 2 //'Payment processing'

: state == 'invalid_cvc'
  ? 3 //'There was an issue with your CVC number'

: true //state == 'invalid_expiry'
  ? 4 //'Expiry must be sometime in the past.'

  : 5 // 'There was an issue with the payment.  Please contact support.'

const foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>
	{medals[0].record ? (
		i18n('Record')
	) : medals[0].unique ? (
		i18n('Unique')
	) : medals[0].type === 0 ? (
		i18n('Silver')
	) : medals[0].type === 1 ? (
		i18n('Gold')
	) : medals[0].type === 2 ? (
		i18n('Platinum')
	) : (
		i18n('Theme')
	)}
</div>

a
    ? literalline
    : {
      123: 12
    }
    ? line
    : softline

=====================================output=====================================
let icecream =
  what == "cone"
    ? p => (!!p ? \`here's your \${p} cone\` : \`just the empty cone for you\`)
    : p => \`here's your \${p} \${what}\`;

const value = condition1
  ? value1
  : condition2
  ? value2
  : condition3
  ? value3
  : value4;

const StorybookLoader = ({ match }) =>
  match.params.storyId === "button" ? (
    <ButtonStorybook />
  ) : match.params.storyId === "color" ? (
    <ColorBook />
  ) : match.params.storyId === "typography" ? (
    <TypographyBook />
  ) : match.params.storyId === "loading" ? (
    <LoaderStorybook />
  ) : match.params.storyId === "deal-list" ? (
    <DealListStory />
  ) : (
    <Message>
      <Title>{"Missing story book"}</Title>
      <Content>
        <BackButton />
      </Content>
    </Message>
  );

const message =
  i % 3 === 0 && i % 5 === 0
    ? "fizzbuzz"
    : i % 3 === 0
    ? "fizz"
    : i % 5 === 0
    ? "buzz"
    : String(i);

const paymentMessage =
  state == "success"
    ? "Payment completed successfully"
    : state == "processing"
    ? "Payment processing"
    : state == "invalid_cvc"
    ? "There was an issue with your CVC number"
    : state == "invalid_expiry"
    ? "Expiry must be sometime in the past."
    : "There was an issue with the payment.  Please contact support.";

const paymentMessage =
  state == "success"
    ? 1 //'Payment completed successfully'
    : state == "processing"
    ? 2 //'Payment processing'
    : state == "invalid_cvc"
    ? 3 //'There was an issue with your CVC number'
    : true //state == 'invalid_expiry'
    ? 4 //'Expiry must be sometime in the past.'
    : 5; // 'There was an issue with the payment.  Please contact support.'

const foo = (
  <div
    className={
      "match-achievement-medal-type type" +
      (medals[0].record
        ? "-record"
        : medals[0].unique
        ? "-unique"
        : medals[0].type)
    }
  >
    {medals[0].record
      ? i18n("Record")
      : medals[0].unique
      ? i18n("Unique")
      : medals[0].type === 0
      ? i18n("Silver")
      : medals[0].type === 1
      ? i18n("Gold")
      : medals[0].type === 2
      ? i18n("Platinum")
      : i18n("Theme")}
  </div>
);

a
  ? literalline
  : {
      123: 12
    }
  ? line
  : softline;

================================================================================
`;

exports[`nested.js 2`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
                                                                                | printWidth
=====================================input======================================
let icecream = what == "cone"
  ? p => !!p ? \`here's your \${p} cone\` : \`just the empty cone for you\`
  : p => \`here's your \${p} \${what}\`;

const value = condition1
? value1
: condition2
    ? value2
    : condition3
        ? value3
        : value4;


const StorybookLoader = ({ match }) => (
  match.params.storyId === "button"
    ? <ButtonStorybook />
    : match.params.storyId === "color"
    ? <ColorBook />
    : match.params.storyId === "typography"
    ? <TypographyBook />
    : match.params.storyId === "loading"
    ? <LoaderStorybook />
    : match.params.storyId === "deal-list"
    ? <DealListStory />
    : (
      <Message>
        <Title>{'Missing story book'}</Title>
        <Content>
          <BackButton/>
        </Content>
      </Message>
    )
)

const message =
    i % 3 === 0 && i % 5 === 0 ?
        'fizzbuzz'
    : i % 3 === 0 ?
        'fizz'
    : i % 5 === 0 ?
        'buzz'
    :
        String(i)

const paymentMessage = state == 'success'
  ? 'Payment completed successfully'

: state == 'processing'
  ? 'Payment processing'

: state == 'invalid_cvc'
  ? 'There was an issue with your CVC number'

: state == 'invalid_expiry'
  ? 'Expiry must be sometime in the past.'

  : 'There was an issue with the payment.  Please contact support.'

const paymentMessage = state == 'success'
  ? 1 //'Payment completed successfully'

: state == 'processing'
  ? 2 //'Payment processing'

: state == 'invalid_cvc'
  ? 3 //'There was an issue with your CVC number'

: true //state == 'invalid_expiry'
  ? 4 //'Expiry must be sometime in the past.'

  : 5 // 'There was an issue with the payment.  Please contact support.'

const foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>
	{medals[0].record ? (
		i18n('Record')
	) : medals[0].unique ? (
		i18n('Unique')
	) : medals[0].type === 0 ? (
		i18n('Silver')
	) : medals[0].type === 1 ? (
		i18n('Gold')
	) : medals[0].type === 2 ? (
		i18n('Platinum')
	) : (
		i18n('Theme')
	)}
</div>

a
    ? literalline
    : {
      123: 12
    }
    ? line
    : softline

=====================================output=====================================
let icecream =
    what == "cone"
        ? p => (!!p ? \`here's your \${p} cone\` : \`just the empty cone for you\`)
        : p => \`here's your \${p} \${what}\`;

const value = condition1
    ? value1
    : condition2
    ? value2
    : condition3
    ? value3
    : value4;

const StorybookLoader = ({ match }) =>
    match.params.storyId === "button" ? (
        <ButtonStorybook />
    ) : match.params.storyId === "color" ? (
        <ColorBook />
    ) : match.params.storyId === "typography" ? (
        <TypographyBook />
    ) : match.params.storyId === "loading" ? (
        <LoaderStorybook />
    ) : match.params.storyId === "deal-list" ? (
        <DealListStory />
    ) : (
        <Message>
            <Title>{"Missing story book"}</Title>
            <Content>
                <BackButton />
            </Content>
        </Message>
    );

const message =
    i % 3 === 0 && i % 5 === 0
        ? "fizzbuzz"
        : i % 3 === 0
        ? "fizz"
        : i % 5 === 0
        ? "buzz"
        : String(i);

const paymentMessage =
    state == "success"
        ? "Payment completed successfully"
        : state == "processing"
        ? "Payment processing"
        : state == "invalid_cvc"
        ? "There was an issue with your CVC number"
        : state == "invalid_expiry"
        ? "Expiry must be sometime in the past."
        : "There was an issue with the payment.  Please contact support.";

const paymentMessage =
    state == "success"
        ? 1 //'Payment completed successfully'
        : state == "processing"
        ? 2 //'Payment processing'
        : state == "invalid_cvc"
        ? 3 //'There was an issue with your CVC number'
        : true //state == 'invalid_expiry'
        ? 4 //'Expiry must be sometime in the past.'
        : 5; // 'There was an issue with the payment.  Please contact support.'

const foo = (
    <div
        className={
            "match-achievement-medal-type type" +
            (medals[0].record
                ? "-record"
                : medals[0].unique
                ? "-unique"
                : medals[0].type)
        }
    >
        {medals[0].record
            ? i18n("Record")
            : medals[0].unique
            ? i18n("Unique")
            : medals[0].type === 0
            ? i18n("Silver")
            : medals[0].type === 1
            ? i18n("Gold")
            : medals[0].type === 2
            ? i18n("Platinum")
            : i18n("Theme")}
    </div>
);

a
    ? literalline
    : {
          123: 12
      }
    ? line
    : softline;

================================================================================
`;

exports[`nested.js 3`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
useTabs: true
                                                                                | printWidth
=====================================input======================================
let icecream = what == "cone"
  ? p => !!p ? \`here's your \${p} cone\` : \`just the empty cone for you\`
  : p => \`here's your \${p} \${what}\`;

const value = condition1
? value1
: condition2
    ? value2
    : condition3
        ? value3
        : value4;


const StorybookLoader = ({ match }) => (
  match.params.storyId === "button"
    ? <ButtonStorybook />
    : match.params.storyId === "color"
    ? <ColorBook />
    : match.params.storyId === "typography"
    ? <TypographyBook />
    : match.params.storyId === "loading"
    ? <LoaderStorybook />
    : match.params.storyId === "deal-list"
    ? <DealListStory />
    : (
      <Message>
        <Title>{'Missing story book'}</Title>
        <Content>
          <BackButton/>
        </Content>
      </Message>
    )
)

const message =
    i % 3 === 0 && i % 5 === 0 ?
        'fizzbuzz'
    : i % 3 === 0 ?
        'fizz'
    : i % 5 === 0 ?
        'buzz'
    :
        String(i)

const paymentMessage = state == 'success'
  ? 'Payment completed successfully'

: state == 'processing'
  ? 'Payment processing'

: state == 'invalid_cvc'
  ? 'There was an issue with your CVC number'

: state == 'invalid_expiry'
  ? 'Expiry must be sometime in the past.'

  : 'There was an issue with the payment.  Please contact support.'

const paymentMessage = state == 'success'
  ? 1 //'Payment completed successfully'

: state == 'processing'
  ? 2 //'Payment processing'

: state == 'invalid_cvc'
  ? 3 //'There was an issue with your CVC number'

: true //state == 'invalid_expiry'
  ? 4 //'Expiry must be sometime in the past.'

  : 5 // 'There was an issue with the payment.  Please contact support.'

const foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>
	{medals[0].record ? (
		i18n('Record')
	) : medals[0].unique ? (
		i18n('Unique')
	) : medals[0].type === 0 ? (
		i18n('Silver')
	) : medals[0].type === 1 ? (
		i18n('Gold')
	) : medals[0].type === 2 ? (
		i18n('Platinum')
	) : (
		i18n('Theme')
	)}
</div>

a
    ? literalline
    : {
      123: 12
    }
    ? line
    : softline

=====================================output=====================================
let icecream =
	what == "cone"
		? p => (!!p ? \`here's your \${p} cone\` : \`just the empty cone for you\`)
		: p => \`here's your \${p} \${what}\`;

const value = condition1
	? value1
	: condition2
	? value2
	: condition3
	? value3
	: value4;

const StorybookLoader = ({ match }) =>
	match.params.storyId === "button" ? (
		<ButtonStorybook />
	) : match.params.storyId === "color" ? (
		<ColorBook />
	) : match.params.storyId === "typography" ? (
		<TypographyBook />
	) : match.params.storyId === "loading" ? (
		<LoaderStorybook />
	) : match.params.storyId === "deal-list" ? (
		<DealListStory />
	) : (
		<Message>
			<Title>{"Missing story book"}</Title>
			<Content>
				<BackButton />
			</Content>
		</Message>
	);

const message =
	i % 3 === 0 && i % 5 === 0
		? "fizzbuzz"
		: i % 3 === 0
		? "fizz"
		: i % 5 === 0
		? "buzz"
		: String(i);

const paymentMessage =
	state == "success"
		? "Payment completed successfully"
		: state == "processing"
		? "Payment processing"
		: state == "invalid_cvc"
		? "There was an issue with your CVC number"
		: state == "invalid_expiry"
		? "Expiry must be sometime in the past."
		: "There was an issue with the payment.  Please contact support.";

const paymentMessage =
	state == "success"
		? 1 //'Payment completed successfully'
		: state == "processing"
		? 2 //'Payment processing'
		: state == "invalid_cvc"
		? 3 //'There was an issue with your CVC number'
		: true //state == 'invalid_expiry'
		? 4 //'Expiry must be sometime in the past.'
		: 5; // 'There was an issue with the payment.  Please contact support.'

const foo = (
	<div
		className={
			"match-achievement-medal-type type" +
			(medals[0].record
				? "-record"
				: medals[0].unique
				? "-unique"
				: medals[0].type)
		}
	>
		{medals[0].record
			? i18n("Record")
			: medals[0].unique
			? i18n("Unique")
			: medals[0].type === 0
			? i18n("Silver")
			: medals[0].type === 1
			? i18n("Gold")
			: medals[0].type === 2
			? i18n("Platinum")
			: i18n("Theme")}
	</div>
);

a
	? literalline
	: {
			123: 12
	  }
	? line
	: softline;

================================================================================
`;

exports[`nested.js 4`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
useTabs: true
                                                                                | printWidth
=====================================input======================================
let icecream = what == "cone"
  ? p => !!p ? \`here's your \${p} cone\` : \`just the empty cone for you\`
  : p => \`here's your \${p} \${what}\`;

const value = condition1
? value1
: condition2
    ? value2
    : condition3
        ? value3
        : value4;


const StorybookLoader = ({ match }) => (
  match.params.storyId === "button"
    ? <ButtonStorybook />
    : match.params.storyId === "color"
    ? <ColorBook />
    : match.params.storyId === "typography"
    ? <TypographyBook />
    : match.params.storyId === "loading"
    ? <LoaderStorybook />
    : match.params.storyId === "deal-list"
    ? <DealListStory />
    : (
      <Message>
        <Title>{'Missing story book'}</Title>
        <Content>
          <BackButton/>
        </Content>
      </Message>
    )
)

const message =
    i % 3 === 0 && i % 5 === 0 ?
        'fizzbuzz'
    : i % 3 === 0 ?
        'fizz'
    : i % 5 === 0 ?
        'buzz'
    :
        String(i)

const paymentMessage = state == 'success'
  ? 'Payment completed successfully'

: state == 'processing'
  ? 'Payment processing'

: state == 'invalid_cvc'
  ? 'There was an issue with your CVC number'

: state == 'invalid_expiry'
  ? 'Expiry must be sometime in the past.'

  : 'There was an issue with the payment.  Please contact support.'

const paymentMessage = state == 'success'
  ? 1 //'Payment completed successfully'

: state == 'processing'
  ? 2 //'Payment processing'

: state == 'invalid_cvc'
  ? 3 //'There was an issue with your CVC number'

: true //state == 'invalid_expiry'
  ? 4 //'Expiry must be sometime in the past.'

  : 5 // 'There was an issue with the payment.  Please contact support.'

const foo = <div className={'match-achievement-medal-type type' + (medals[0].record ? '-record' : (medals[0].unique ? '-unique' : medals[0].type))}>
	{medals[0].record ? (
		i18n('Record')
	) : medals[0].unique ? (
		i18n('Unique')
	) : medals[0].type === 0 ? (
		i18n('Silver')
	) : medals[0].type === 1 ? (
		i18n('Gold')
	) : medals[0].type === 2 ? (
		i18n('Platinum')
	) : (
		i18n('Theme')
	)}
</div>

a
    ? literalline
    : {
      123: 12
    }
    ? line
    : softline

=====================================output=====================================
let icecream =
	what == "cone"
		? p => (!!p ? \`here's your \${p} cone\` : \`just the empty cone for you\`)
		: p => \`here's your \${p} \${what}\`;

const value = condition1
	? value1
	: condition2
	? value2
	: condition3
	? value3
	: value4;

const StorybookLoader = ({ match }) =>
	match.params.storyId === "button" ? (
		<ButtonStorybook />
	) : match.params.storyId === "color" ? (
		<ColorBook />
	) : match.params.storyId === "typography" ? (
		<TypographyBook />
	) : match.params.storyId === "loading" ? (
		<LoaderStorybook />
	) : match.params.storyId === "deal-list" ? (
		<DealListStory />
	) : (
		<Message>
			<Title>{"Missing story book"}</Title>
			<Content>
				<BackButton />
			</Content>
		</Message>
	);

const message =
	i % 3 === 0 && i % 5 === 0
		? "fizzbuzz"
		: i % 3 === 0
		? "fizz"
		: i % 5 === 0
		? "buzz"
		: String(i);

const paymentMessage =
	state == "success"
		? "Payment completed successfully"
		: state == "processing"
		? "Payment processing"
		: state == "invalid_cvc"
		? "There was an issue with your CVC number"
		: state == "invalid_expiry"
		? "Expiry must be sometime in the past."
		: "There was an issue with the payment.  Please contact support.";

const paymentMessage =
	state == "success"
		? 1 //'Payment completed successfully'
		: state == "processing"
		? 2 //'Payment processing'
		: state == "invalid_cvc"
		? 3 //'There was an issue with your CVC number'
		: true //state == 'invalid_expiry'
		? 4 //'Expiry must be sometime in the past.'
		: 5; // 'There was an issue with the payment.  Please contact support.'

const foo = (
	<div
		className={
			"match-achievement-medal-type type" +
			(medals[0].record
				? "-record"
				: medals[0].unique
				? "-unique"
				: medals[0].type)
		}
	>
		{medals[0].record
			? i18n("Record")
			: medals[0].unique
			? i18n("Unique")
			: medals[0].type === 0
			? i18n("Silver")
			: medals[0].type === 1
			? i18n("Gold")
			: medals[0].type === 2
			? i18n("Platinum")
			: i18n("Theme")}
	</div>
);

a
	? literalline
	: {
			123: 12
	  }
	? line
	: softline;

================================================================================
`;

exports[`parenthesis.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
debug ? this.state.isVisible ? "partially visible" : "hidden" : null;
debug ? this.state.isVisible && somethingComplex ? "partially visible" : "hidden" : null;

a => a ? () => {a} : () => {a}
a => a ? a : a
a => a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a

=====================================output=====================================
debug ? (this.state.isVisible ? "partially visible" : "hidden") : null;
debug
  ? this.state.isVisible && somethingComplex
    ? "partially visible"
    : "hidden"
  : null;

a =>
  a
    ? () => {
        a;
      }
    : () => {
        a;
      };
a => (a ? a : a);
a =>
  a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a;

================================================================================
`;

exports[`parenthesis.js 2`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
                                                                                | printWidth
=====================================input======================================
debug ? this.state.isVisible ? "partially visible" : "hidden" : null;
debug ? this.state.isVisible && somethingComplex ? "partially visible" : "hidden" : null;

a => a ? () => {a} : () => {a}
a => a ? a : a
a => a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a

=====================================output=====================================
debug ? (this.state.isVisible ? "partially visible" : "hidden") : null;
debug
    ? this.state.isVisible && somethingComplex
        ? "partially visible"
        : "hidden"
    : null;

a =>
    a
        ? () => {
              a;
          }
        : () => {
              a;
          };
a => (a ? a : a);
a =>
    a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a;

================================================================================
`;

exports[`parenthesis.js 3`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
useTabs: true
                                                                                | printWidth
=====================================input======================================
debug ? this.state.isVisible ? "partially visible" : "hidden" : null;
debug ? this.state.isVisible && somethingComplex ? "partially visible" : "hidden" : null;

a => a ? () => {a} : () => {a}
a => a ? a : a
a => a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a

=====================================output=====================================
debug ? (this.state.isVisible ? "partially visible" : "hidden") : null;
debug
	? this.state.isVisible && somethingComplex
		? "partially visible"
		: "hidden"
	: null;

a =>
	a
		? () => {
				a;
		  }
		: () => {
				a;
		  };
a => (a ? a : a);
a =>
	a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a;

================================================================================
`;

exports[`parenthesis.js 4`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
useTabs: true
                                                                                | printWidth
=====================================input======================================
debug ? this.state.isVisible ? "partially visible" : "hidden" : null;
debug ? this.state.isVisible && somethingComplex ? "partially visible" : "hidden" : null;

a => a ? () => {a} : () => {a}
a => a ? a : a
a => a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a

=====================================output=====================================
debug ? (this.state.isVisible ? "partially visible" : "hidden") : null;
debug
	? this.state.isVisible && somethingComplex
		? "partially visible"
		: "hidden"
	: null;

a =>
	a
		? () => {
				a;
		  }
		: () => {
				a;
		  };
a => (a ? a : a);
a =>
	a ? aasdasdasdasdasdasdaaasdasdasdasdasdasdasdasdasdasdasdasdasdaaaaaa : a;

================================================================================
`;

exports[`test.js 1`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
                                                                                | printWidth
=====================================input======================================
const obj0 = conditionIsTruthy ? shortThing : otherShortThing

const obj1 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : shortThing

const obj2 = conditionIsTruthy ? shortThing : { some: 'long', object: 'with', lots: 'of', stuff }

const obj3 = conditionIsTruthy ? { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff } : shortThing

const obj4 = conditionIsTruthy ? shortThing : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }

const obj5 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }

=====================================output=====================================
const obj0 = conditionIsTruthy ? shortThing : otherShortThing;

const obj1 = conditionIsTruthy
  ? { some: "long", object: "with", lots: "of", stuff }
  : shortThing;

const obj2 = conditionIsTruthy
  ? shortThing
  : { some: "long", object: "with", lots: "of", stuff };

const obj3 = conditionIsTruthy
  ? {
      some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
      object: "with",
      lots: "of",
      stuff
    }
  : shortThing;

const obj4 = conditionIsTruthy
  ? shortThing
  : {
      some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
      object: "with",
      lots: "of",
      stuff
    };

const obj5 = conditionIsTruthy
  ? { some: "long", object: "with", lots: "of", stuff }
  : {
      some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
      object: "with",
      lots: "of",
      stuff
    };

================================================================================
`;

exports[`test.js 2`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
                                                                                | printWidth
=====================================input======================================
const obj0 = conditionIsTruthy ? shortThing : otherShortThing

const obj1 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : shortThing

const obj2 = conditionIsTruthy ? shortThing : { some: 'long', object: 'with', lots: 'of', stuff }

const obj3 = conditionIsTruthy ? { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff } : shortThing

const obj4 = conditionIsTruthy ? shortThing : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }

const obj5 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }

=====================================output=====================================
const obj0 = conditionIsTruthy ? shortThing : otherShortThing;

const obj1 = conditionIsTruthy
    ? { some: "long", object: "with", lots: "of", stuff }
    : shortThing;

const obj2 = conditionIsTruthy
    ? shortThing
    : { some: "long", object: "with", lots: "of", stuff };

const obj3 = conditionIsTruthy
    ? {
          some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
          object: "with",
          lots: "of",
          stuff
      }
    : shortThing;

const obj4 = conditionIsTruthy
    ? shortThing
    : {
          some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
          object: "with",
          lots: "of",
          stuff
      };

const obj5 = conditionIsTruthy
    ? { some: "long", object: "with", lots: "of", stuff }
    : {
          some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
          object: "with",
          lots: "of",
          stuff
      };

================================================================================
`;

exports[`test.js 3`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
useTabs: true
                                                                                | printWidth
=====================================input======================================
const obj0 = conditionIsTruthy ? shortThing : otherShortThing

const obj1 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : shortThing

const obj2 = conditionIsTruthy ? shortThing : { some: 'long', object: 'with', lots: 'of', stuff }

const obj3 = conditionIsTruthy ? { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff } : shortThing

const obj4 = conditionIsTruthy ? shortThing : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }

const obj5 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }

=====================================output=====================================
const obj0 = conditionIsTruthy ? shortThing : otherShortThing;

const obj1 = conditionIsTruthy
	? { some: "long", object: "with", lots: "of", stuff }
	: shortThing;

const obj2 = conditionIsTruthy
	? shortThing
	: { some: "long", object: "with", lots: "of", stuff };

const obj3 = conditionIsTruthy
	? {
			some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
			object: "with",
			lots: "of",
			stuff
	  }
	: shortThing;

const obj4 = conditionIsTruthy
	? shortThing
	: {
			some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
			object: "with",
			lots: "of",
			stuff
	  };

const obj5 = conditionIsTruthy
	? { some: "long", object: "with", lots: "of", stuff }
	: {
			some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
			object: "with",
			lots: "of",
			stuff
	  };

================================================================================
`;

exports[`test.js 4`] = `
====================================options=====================================
parsers: ["flow", "typescript"]
printWidth: 80
tabWidth: 4
useTabs: true
                                                                                | printWidth
=====================================input======================================
const obj0 = conditionIsTruthy ? shortThing : otherShortThing

const obj1 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : shortThing

const obj2 = conditionIsTruthy ? shortThing : { some: 'long', object: 'with', lots: 'of', stuff }

const obj3 = conditionIsTruthy ? { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff } : shortThing

const obj4 = conditionIsTruthy ? shortThing : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }

const obj5 = conditionIsTruthy ? { some: 'long', object: 'with', lots: 'of', stuff } : { some: 'eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger', object: 'with', lots: 'of', stuff }

=====================================output=====================================
const obj0 = conditionIsTruthy ? shortThing : otherShortThing;

const obj1 = conditionIsTruthy
	? { some: "long", object: "with", lots: "of", stuff }
	: shortThing;

const obj2 = conditionIsTruthy
	? shortThing
	: { some: "long", object: "with", lots: "of", stuff };

const obj3 = conditionIsTruthy
	? {
			some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
			object: "with",
			lots: "of",
			stuff
	  }
	: shortThing;

const obj4 = conditionIsTruthy
	? shortThing
	: {
			some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
			object: "with",
			lots: "of",
			stuff
	  };

const obj5 = conditionIsTruthy
	? { some: "long", object: "with", lots: "of", stuff }
	: {
			some: "eeeeeeeeeeeeven looooooooooooooooooooooooooooooonger",
			object: "with",
			lots: "of",
			stuff
	  };

================================================================================
`;
